//
//  ViewController.m
//  spritybird
//
//  Created by Alexis Creuzot on 09/02/2014.
//  Copyright (c) 2014 Alexis Creuzot. All rights reserved.
//

#import "ViewController.h"
#import "Scene.h"
#import "Score.h"
#import "SettingsViewController.h"

@interface ViewController ()
@property (weak,nonatomic) IBOutlet SKView * gameView;
@property (weak,nonatomic) IBOutlet UIView * getReadyView;

@property (weak,nonatomic) IBOutlet UIView * gameOverView;
@property (weak,nonatomic) IBOutlet UIImageView * medalImageView;
@property (weak,nonatomic) IBOutlet UILabel * currentScore;
@property (weak,nonatomic) IBOutlet UILabel * bestScoreLabel;

@end

@implementation ViewController {
    Scene * scene;
    UIView * flash;
}

- (void)awakeFromNib {
    [super awakeFromNib];
}

- (void)viewWillLayoutSubviews {
    [super viewWillLayoutSubviews];
    [[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationSlide];
    

    // Create and configure the scene.
    scene = [Scene sceneWithSize:self.gameView.bounds.size];
    scene.scaleMode = SKSceneScaleModeAspectFill;
    scene.delegate = self;

    // Present the scene
    self.gameOverView.alpha = 0;
    self.gameOverView.transform = CGAffineTransformMakeScale(.9, .9);
    [self.gameView presentScene:scene];
}


- (BOOL)prefersStatusBarHidden {
    return YES;
}

#pragma mark - Bouncing scene delegate

- (void)eventStart {
    [UIView animateWithDuration:.2 animations:^{
        self.gameOverView.alpha = 0;
        self.gameOverView.transform = CGAffineTransformMakeScale(.8, .8);
        flash.alpha = 0;
        self.getReadyView.alpha = 1;
    } completion:^(BOOL finished) {
        [flash removeFromSuperview];

    }];
}

- (void)eventPlay {
    settingsButton.hidden = YES;
    [[Tracking sharedInstance] trackUserEvent: @"game_start" Value: @""];
    [UIView animateWithDuration:.5 animations:^{
        self.getReadyView.alpha = 0;
    }];
}

- (void)eventWasted {
    flash = [[UIView alloc] initWithFrame:self.view.frame];
    flash.backgroundColor = [UIColor whiteColor];
    flash.alpha = .9;
    [self.gameView insertSubview:flash belowSubview:self.getReadyView];
    
    [self shakeFrame];
    
    [UIView animateWithDuration:.6 delay:0 options:UIViewAnimationOptionCurveEaseIn animations:^{
        
        // Display game over
        flash.alpha = .4;
        self.gameOverView.alpha = 1;
        self.gameOverView.transform = CGAffineTransformMakeScale(1, 1);
        
        // Set medal
        if (scene.score >= 40) {
            self.medalImageView.image = [UIImage imageNamed:@"medal_platinum"];
            [[Tracking sharedInstance] trackUserEvent: @"platinum_award" Value: [NSString stringWithFormat: @"%d", (int)scene.score]];
        } else if (scene.score >= 30) {
            self.medalImageView.image = [UIImage imageNamed:@"medal_gold"];
            [[Tracking sharedInstance] trackUserEvent: @"gold_award" Value: [NSString stringWithFormat: @"%d", (int)scene.score]];
        } else if (scene.score >= 20) {
            self.medalImageView.image = [UIImage imageNamed:@"medal_silver"];
            [[Tracking sharedInstance] trackUserEvent: @"silver_award" Value: [NSString stringWithFormat: @"%d", (int)scene.score]];
        } else if (scene.score >= 10) {
            self.medalImageView.image = [UIImage imageNamed:@"medal_bronze"];
            [[Tracking sharedInstance] trackUserEvent: @"bronze_award" Value: [NSString stringWithFormat: @"%d", (int)scene.score]];
        } else {
            self.medalImageView.image = nil;
        }
        
        // Set scores
        self.currentScore.text = F(@"%li",(long)scene.score);
        self.bestScoreLabel.text = F(@"%li",(long)[Score bestScore]);
        
    } completion: ^(BOOL finished) {
        flash.userInteractionEnabled = NO;
        settingsButton.hidden = NO;
    }];
    
    [[Tracking sharedInstance] trackUserEvent: @"game_over" Value: [NSString stringWithFormat: @"%d", (int)scene.score]];

}

- (void)shakeFrame {
    CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@"position"];
    [animation setDuration:0.05];
    [animation setRepeatCount:4];
    [animation setAutoreverses:YES];
    [animation setFromValue:[NSValue valueWithCGPoint: CGPointMake([self.view  center].x - 4.0f, [self.view  center].y)]];
    [animation setToValue:[NSValue valueWithCGPoint: CGPointMake([self.view  center].x + 4.0f, [self.view  center].y)]];
    [[self.view layer] addAnimation:animation forKey:@"position"];
}

-(IBAction)openSettings:(id)sender {
    NSLog(@"openSettings");
    SettingsViewController* controller = [[SettingsViewController alloc] initWithNibName: @"SettingsViewController" bundle: nil];
    [[Tracking sharedInstance] trackUserEvent: @"show_settings" Value: @""];
    [self presentViewController: controller animated: YES completion: ^(void) {
    }];
}

@end
